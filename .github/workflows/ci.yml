name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DATABASE_URL: postgresql://postgres@localhost:5432/rocket_countdown

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npm run db:generate
    
    - name: Start PostgreSQL with Endor
      id: endor
      continue-on-error: true
      run: |
        echo "Starting Endor PostgreSQL..."
        npx endor run postgres > endor.log 2>&1 &
        ENDOR_PID=$!
        echo "endor_pid=$ENDOR_PID" >> $GITHUB_OUTPUT
        
        # Give Endor time to start
        echo "Waiting for Endor to initialize..."
        sleep 5
        
        # Check if Endor process is still running
        if ps -p $ENDOR_PID > /dev/null; then
          echo "Endor process is running (PID: $ENDOR_PID)"
        else
          echo "Endor process failed to start"
          cat endor.log || true
          exit 1
        fi
        
        # Wait for database to be ready
        if node tests/wait-for-db.js; then
          echo "endor_success=true" >> $GITHUB_OUTPUT
        else
          echo "Database wait failed"
          echo "=== Endor logs ==="
          cat endor.log || true
          echo "=== End of logs ==="
          exit 1
        fi
    
    - name: Push database schema
      run: npm run db:push
    
    - name: Seed test data
      run: npm run db:seed
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Stop Endor
      if: always() && steps.endor.outputs.endor_pid
      run: kill ${{ steps.endor.outputs.endor_pid }} || true

  build:
    name: Build and Smoke Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npm run db:generate
    
    - name: Test server startup (without DB)
      run: |
        # Start server
        timeout 10s npm start &
        SERVER_PID=$!
        
        # Wait a bit for server to start
        sleep 3
        
        # The server should be running even without DB
        if ps -p $SERVER_PID > /dev/null; then
          echo "✅ Server process started successfully"
          kill $SERVER_PID || true
        else
          echo "❌ Server process failed to start"
          exit 1
        fi
      env:
        PORT: 3002